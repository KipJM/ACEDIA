[gd_resource type="VisualShader" load_steps=10 format=3 uid="uid://d01gs1m62dhf6"]

[ext_resource type="Script" uid="uid://r6lv2gt5lu8p" path="res://addons/shaderV/rgba/shiftHSV.gd" id="1_5k3wg"]

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_gl1r2"]
parameter_name = "reflection_screen_texture"
texture_type = 1
color_default = 1

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_w6nog"]
source = 5

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_t4xqb"]
operator = 2

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_5k3wg"]
parameter_name = "reflection_strength"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_mtewp"]
parameter_name = "reflection_saturation"

[sub_resource type="VisualShaderNodeCustom" id="VisualShaderNodeCustom_mtewp"]
default_input_values = [1, 0.0, 2, 1.0, 3, 1.0]
initialized = true
script = ExtResource("1_5k3wg")

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_d3rob"]
parameter_name = "reflection_value"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_gl1r2"]
input_name = "screen_uv"

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_disabled, unshaded;

uniform sampler2D reflection_screen_texture : source_color, hint_default_black;
uniform float reflection_strength;
uniform float reflection_saturation;
uniform float reflection_value;


// ShiftHSV
#include \"res://addons/shaderV/rgba/shiftHSV.gdshaderinc\"

void fragment() {
// Input:6
	vec2 n_out6p0 = SCREEN_UV;


	vec4 n_out3p0;
// Texture2D:3
	n_out3p0 = texture(reflection_screen_texture, n_out6p0);


// FloatParameter:41
	float n_out41p0 = reflection_strength;


// VectorOp:40
	vec3 n_out40p0 = vec3(n_out3p0.xyz) * vec3(n_out41p0);


// FloatParameter:43
	float n_out43p0 = reflection_saturation;


// FloatParameter:45
	float n_out45p0 = reflection_value;


	vec3 n_out44p0;
// ShiftHSV:44
	float n_in44p1 = 0.00000;
	{
		n_out44p0 = _hsvChangeHSVChangeFunc(n_out40p0, n_in44p1, n_out43p0, n_out45p0);
	}


// Output:0
	ALBEDO = n_out44p0;


}
"
modes/specular = 2
flags/unshaded = true
nodes/fragment/0/position = Vector2(200, -1060)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture2DParameter_gl1r2")
nodes/fragment/2/position = Vector2(-2080, -1020)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_w6nog")
nodes/fragment/3/position = Vector2(-1580, -1080)
nodes/fragment/6/node = SubResource("VisualShaderNodeInput_gl1r2")
nodes/fragment/6/position = Vector2(-2060, -1180)
nodes/fragment/40/node = SubResource("VisualShaderNodeVectorOp_t4xqb")
nodes/fragment/40/position = Vector2(-1040, -900)
nodes/fragment/41/node = SubResource("VisualShaderNodeFloatParameter_5k3wg")
nodes/fragment/41/position = Vector2(-2000, -500)
nodes/fragment/43/node = SubResource("VisualShaderNodeFloatParameter_mtewp")
nodes/fragment/43/position = Vector2(-2020, -180)
nodes/fragment/44/node = SubResource("VisualShaderNodeCustom_mtewp")
nodes/fragment/44/position = Vector2(-600, -720)
nodes/fragment/45/node = SubResource("VisualShaderNodeFloatParameter_d3rob")
nodes/fragment/45/position = Vector2(-2020, 120)
nodes/fragment/connections = PackedInt32Array(2, 0, 3, 2, 6, 0, 3, 0, 41, 0, 40, 1, 3, 0, 40, 0, 40, 0, 44, 0, 44, 0, 0, 0, 43, 0, 44, 2, 45, 0, 44, 3)
